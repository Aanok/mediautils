#!/bin/bash

# read file search root directory if provided, default to PWD otherwise
if [ -z "$1" ]; then
	INDIR="$PWD"
else
	INDIR="$1"
fi

# create output directory
OUTDIR="$INDIR/opus"
if [ ! -d "$OUTDIR" ]; then mkdir "$OUTDIR"; fi

# enable globstar for recursive file search
shopt -s globstar

# compute list of input and output
declare -a INPUT
declare -a OUTPUT
i=0
for x in "$INDIR"/**/*.flac; do
	INPUT[$i]="$x"
	y="${x##$INDIR/}"
	y="${y%.*}.ogg"
	OUTPUT[$i]="$y"
	((i++))
done

# execute actual reencoding operations
i=0
while [ ! -z "${INPUT[$i]}" ]; do
	# check for output subdirectory, create it if it doesn't exist
	# output subdirectory is basically the path of the output file, minus its basename
	targetdir="$OUTDIR/${OUTPUT[$i]%%/*}"
	if [ ! -d "$targetdir" ]; then mkdir "$targetdir"; fi
	ffmpeg -i "${INPUT[$i]}" -c:a libopus -vbr on -compression_level 10 -b:a 128000 "$OUTDIR/${OUTPUT[$i]}"
	((i++))
done

# setup start of body of mail notification
if [ -f mailbody ]; then rm mailbody; fi
echo "Reencoding $INDIR in Opus: done." >> mailbody

# look, starting from scratch, that each input file has an output equivalent
successes=( )
failures=( )
i=0
while [ ! -z "${INPUT[$i]}" ]; do
	if [ -f "$OUTDIR"/"${OUTPUT[$i]}" ]; then
		# the file was reencoded
		successes=( "${successes[@]}" "${OUTPUT[$i]}" )
	else
		# the file was not reencoded
		failures=( "${failures[@]}" "${INPUT[$i]}" )
	fi
done

# complete body of mail notification
if [ ${#successes[@]} = 0 ]; then
	echo 'No file was reencoded.' >> mailbody
else
	echo "The following files were generated under directory $OUTDIR:" >> mailbody
	printf '%s\n' "${successes[@]}" >> mailbody
fi
echo >> mailbody

if [ ${#failuress[@]} = 0 ]; then
        echo 'All input files were processed.' >> mailbody
else
        echo 'The following files could not be processed:' >> mailbody
        printf '%s\n' "${failures[@]}" >> mailbody
fi

# send email notification
cat mailbody | mail -s 'Reencoding ${INDIR##*/} in Opus' fabrizio07@gmail.com

# cleanup
rm mailbody
